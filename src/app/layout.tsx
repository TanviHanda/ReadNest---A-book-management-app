import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { NextSSRPlugin } from "@uploadthing/react/next-ssr-plugin";
import { SessionProvider } from "next-auth/react";
import type { ReactNode } from "react";
import { extractRouterConfig } from "uploadthing/server";
import { NuqsAdapter } from "nuqs/adapters/next/app";
import { auth } from "@/auth";
import { Toaster } from "@/components/ui/sonner";
import { ourFileRouter } from "./api/uploadthing/core";

const ibmPlexSans = localFont({
  src: [
    {
      path: "../fonts/IBMPlexSans-Regular.ttf",
      weight: "400",
      style: "normal",
    },
    { path: "../fonts/IBMPlexSans-Medium.ttf", weight: "500", style: "normal" },
    {
      path: "../fonts/IBMPlexSans-SemiBold.ttf",
      weight: "600",
      style: "normal",
    },
    { path: "../fonts/IBMPlexSans-Bold.ttf", weight: "700", style: "normal" },
  ],
});

const bebasNeue = localFont({
  src: [
    { path: "../fonts/BebasNeue-Regular.ttf", weight: "400", style: "normal" },
  ],
  variable: "--bebas-neue",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const RootLayout = async ({ children }: { children: ReactNode }) => {
  const session = await auth();
  return (
    <html lang="en">
      <SessionProvider session={session}>
        <body
          className={`${ibmPlexSans.className} ${bebasNeue.variable} antialiased`}
        >
          <NextSSRPlugin
            /**
             * The `extractRouterConfig` will extract **only** the route configs
             * from the router to prevent additional information from being
             * leaked to the client. The data passed to the client is the same
             * as if you were to fetch `/api/uploadthing` directly.
             */
            routerConfig={extractRouterConfig(ourFileRouter)}
          />
          <Toaster richColors />

          <NuqsAdapter>{children}</NuqsAdapter>
        </body>
      </SessionProvider>
    </html>
  );
};

export default RootLayout;
